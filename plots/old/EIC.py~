#!/usr/bin/env python
# coding: utf-8

import pylab as py
import pandas as pd
import numpy as np
from scipy.interpolate import interp1d
from  matplotlib import rc
from matplotlib.colors import LogNorm
from matplotlib import font_manager
import matplotlib 
from matplotlib.pyplot import gca
sizeOfFont = 20
rc('text',usetex=True)
fontProperties = {'weight' : 'normal', 'size' : sizeOfFont}
ticks_font = matplotlib.font_manager.FontProperties(style='normal',size=sizeOfFont, weight='normal', stretch='normal')
rc('text',usetex=True)
rc('font',**fontProperties)
import warnings
warnings.filterwarnings("ignore")


df = pd.read_csv("fort.1000",delim_whitespace=True)

avgs = []
stds = []

for i in range(1,11):
    if i == 10:
        dff = pd.read_csv("fort.1"+str(i) ,delim_whitespace=True)
    else:
        dff = pd.read_csv("fort.10"+str(i),delim_whitespace=True)
    fuuA = np.average(dff.fuuA)
    fuuD = dff.fuuD.iloc[0]
    disA = df.disA.iloc[i-1]
    disD = df.disD.iloc[i-1]
    dff["R"] = (dff.fuuA/disA)/(dff.fuuD/disD)
    avg = np.average(dff.R)
    std = np.std(    dff.R)
    avgs.append(avg)
    stds.append(std)

avgs = np.array(avgs)
stds = np.array(stds)

fig = py.figure(figsize=(10,4))

ax = py.subplot(131)
fp = interp1d(df.PhT,avgs+stds, kind='cubic')
fm = interp1d(df.PhT,avgs-stds, kind='cubic')
xnew = np.linspace(min(df.PhT.tolist()),max(df.PhT.tolist()),100)
#ax.step(df.PhT,avgs+stds,where = "mid",color = "blue")
#ax.step(df.PhT,avgs-stds,where = "mid",color = "blue")
ax.fill_between(xnew,fp(xnew),fm(xnew),color = "blue")
ax.plot(xnew,fp(xnew),color = "blue")
ax.plot(xnew,fm(xnew),color = "blue")
#ax.fill_between(df.PhT,avgs+stds,avgs-stds,color = "blue")
#ax.plot(xnew,f(xnew))
ax.set_ylabel(r'\rm $R_{\rm Au}^{\pi^+}$')
ax.set_ylim(0.5,0.8)
ax.set_xlim(0.01,0.79)
ax.tick_params(axis='both',which = "major",direction = "in",length = 7)
ax.minorticks_on()
ax.yaxis.set_ticks_position('both')
ax.xaxis.set_ticks_position('both')
ax.tick_params(axis='both',which = "minor",direction = "in",length = 4)
ax.text(0.5, 1.05, r'\rm $Q = 2$ GeV', horizontalalignment='center',verticalalignment='center', transform=ax.transAxes,fontsize = 20)

df = pd.read_csv("fort.1001",delim_whitespace=True)

avgs = []
stds = []

for i in range(1,11):
    if i == 10:
        dff = pd.read_csv("fort.2"+str(i) ,delim_whitespace=True)
    else:
        dff = pd.read_csv("fort.20"+str(i),delim_whitespace=True)
    fuuA = np.average(dff.fuuA)
    fuuD = dff.fuuD.iloc[0]
    disA = df.disA.iloc[i-1]
    disD = df.disD.iloc[i-1]
    dff["R"] = (dff.fuuA/disA)/(dff.fuuD/disD)
    avg = np.average(dff.R)
    std = np.std(    dff.R)
    avgs.append(avg)
    stds.append(std)

avgs = np.array(avgs)
stds = np.array(stds)

ax = py.subplot(132)
fp = interp1d(df.PhT,avgs+stds, kind='cubic')
fm = interp1d(df.PhT,avgs-stds, kind='cubic')
xnew = np.linspace(min(df.PhT.tolist()),max(df.PhT.tolist()),100)
#ax.step(df.PhT,avgs+stds,where = "mid",color = "blue")
#ax.step(df.PhT,avgs-stds,where = "mid",color = "blue")
#ax.fill_between(df.PhT,avgs+stds,avgs-stds,step = "mid")
ax.plot(xnew,fp(xnew),color = "blue")
ax.plot(xnew,fm(xnew),color = "blue")
ax.fill_between(xnew,fp(xnew),fm(xnew),color = "blue")
ax.set_xlabel(r'\rm $P_{h\perp}$')
ax.set_ylim(0.5,0.8)
ax.set_xlim(0.01,0.79)
ax.tick_params(axis='both',which = "major",direction = "in",length = 7)
ax.minorticks_on()
ax.yaxis.set_ticks_position('both')
ax.xaxis.set_ticks_position('both')
ax.tick_params(axis='both',which = "minor",direction = "in",length = 4)
ax.set_yticklabels([])
ax.text(0.5, 1.05, r'\rm $Q = 5$ GeV', horizontalalignment='center',verticalalignment='center', transform=ax.transAxes,fontsize = 20)

df = pd.read_csv("fort.1002",delim_whitespace=True)

avgs = []
stds = []

for i in range(1,11):
    if i == 10:
        dff = pd.read_csv("fort.3"+str(i) ,delim_whitespace=True)
    else:
        dff = pd.read_csv("fort.30"+str(i),delim_whitespace=True)
    fuuA = np.average(dff.fuuA)
    fuuD = dff.fuuD.iloc[0]
    disA = df.disA.iloc[i-1]
    disD = df.disD.iloc[i-1]
    dff["R"] = (dff.fuuA/disA)/(dff.fuuD/disD)
    avg = np.average(dff.R)
    std = np.std(    dff.R)
    avgs.append(avg)
    stds.append(std)

avgs = np.array(avgs)
stds = np.array(stds)

ax = py.subplot(133)
fp = interp1d(df.PhT,avgs+stds, kind='cubic')
fm = interp1d(df.PhT,avgs-stds, kind='cubic')
xnew = np.linspace(min(df.PhT.tolist()),max(df.PhT.tolist()),100)
#ax.step(df.PhT,avgs+stds,where = "mid",color = "blue")
#ax.step(df.PhT,avgs-stds,where = "mid",color = "blue")
#ax.fill_between(df.PhT,avgs+stds,avgs-stds,step = "mid")
ax.plot(xnew,fp(xnew),color = "blue")
ax.plot(xnew,fm(xnew),color = "blue")
ax.fill_between(xnew,fp(xnew),fm(xnew),color = "blue")
ax.set_ylim(0.5,0.8)
ax.set_xlim(0.01,0.79)
ax.tick_params(axis='both',which = "major",direction = "in",length = 7)
ax.minorticks_on()
ax.yaxis.set_ticks_position('both')
ax.xaxis.set_ticks_position('both')
ax.tick_params(axis='both',which = "minor",direction = "in",length = 4)
ax.set_yticklabels([])
ax.text(0.5, 1.05, r'\rm $Q = 10$ GeV', horizontalalignment='center',verticalalignment='center', transform=ax.transAxes,fontsize = 20)

py.tight_layout()

py.subplots_adjust(wspace=0, hspace=0)

py.show()
